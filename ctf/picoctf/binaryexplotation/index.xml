<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Binary Explotation on d3bo</title><link>/ctf/picoctf/binaryexplotation/</link><description>Recent content in Binary Explotation on d3bo</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright (c) 2023 Hyas</copyright><lastBuildDate>Mon, 08 Jan 2024 12:16:22 +0100</lastBuildDate><atom:link href="/ctf/picoctf/binaryexplotation/index.xml" rel="self" type="application/rss+xml"/><item><title>Stonks</title><link>/ctf/picoctf/binaryexplotation/stonks/</link><pubDate>Wed, 02 Jul 2025 00:00:00 +0000</pubDate><guid>/ctf/picoctf/binaryexplotation/stonks/</guid><description>#include &amp;lt;stdlib.h&amp;gt; #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;lt;time.h&amp;gt; #define FLAG_BUFFER 128 #define MAX_SYM_LEN 4 typedef struct Stonks { int shares; char symbol[MAX_SYM_LEN + 1]; struct Stonks *next; } Stonk; typedef struct Portfolios { int money; Stonk *head; } Portfolio; int view_portfolio(Portfolio *p) { if (!</description></item><item><title>Format strings 1</title><link>/ctf/picoctf/binaryexplotation/format-strings-1/</link><pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate><guid>/ctf/picoctf/binaryexplotation/format-strings-1/</guid><description>#include &amp;lt;stdio.h&amp;gt; int main() { char buf[1024]; char secret1[64]; char flag[64]; char secret2[64]; // Read in first secret menu item FILE *fd = fopen(&amp;#34;secret-menu-item-1.</description></item><item><title>Buffer Overflow 1</title><link>/ctf/picoctf/binaryexplotation/bof1/</link><pubDate>Sat, 10 Feb 2024 12:16:22 +0100</pubDate><guid>/ctf/picoctf/binaryexplotation/bof1/</guid><description>Material / Informaci√≥n Dominio: saturn.picoctf.net Puerto: 63667 (Puede variar) Binario (vuln) Script en c del binario (vuln.c) #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdlib.</description></item><item><title>Heap 0</title><link>/ctf/picoctf/binaryexplotation/heap-0/</link><pubDate>Sat, 10 Feb 2024 12:16:22 +0100</pubDate><guid>/ctf/picoctf/binaryexplotation/heap-0/</guid><description>Analisis #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; #include &amp;lt;string.h&amp;gt; #define FLAGSIZE_MAX 64 // amount of memory allocated for input_data #define INPUT_DATA_SIZE 5 // amount of memory allocated for safe_var #define SAFE_VAR_SIZE 5 int num_allocs; char *safe_var; char *input_data; void check_win() { if (strcmp(safe_var, &amp;#34;bico&amp;#34;) !</description></item><item><title>Here's a LIBC</title><link>/ctf/picoctf/binaryexplotation/heres_a_libc/</link><pubDate>Sat, 10 Feb 2024 12:16:22 +0100</pubDate><guid>/ctf/picoctf/binaryexplotation/heres_a_libc/</guid><description>#!/usr/bin/env python3 from pwn import * import base64 e = ELF(&amp;#34;./vuln_patched&amp;#34;) libc = ELF(&amp;#34;./libc.so.6&amp;#34;) ld = ELF(&amp;#34;./ld-2.27.so&amp;#34;) context.binary = e context.</description></item></channel></rss>